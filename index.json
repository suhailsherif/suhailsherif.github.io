[{"authors":null,"categories":null,"content":"I am currently a postdoctoral researcher at , a research unit at the University of Lisbon, working with Bruno Loff on the Hardness of Finding Good Algorithms.\nI completed my PhD under the supervision of Arkadev Chattopadhyay at the Tata Institute of Fundamental Research. The work therein was awarded the 2021 ACM India Doctoral Dissertation Award. You can watch me defend my dissertation here. I then did a postdoc at the University of Toronto with Toni Pitassi.\nOn this page you can find my recent/featured publications and maybe even other things that I might feel comfortable sharing with strangers on the internet.\n","date":1673395200,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":1673417486,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"","publishdate":"0001-01-01T00:00:00Z","relpermalink":"","section":"authors","summary":"I am currently a postdoctoral researcher at , a research unit at the University of Lisbon, working with Bruno Loff on the Hardness of Finding Good Algorithms.\nI completed my PhD under the supervision of Arkadev Chattopadhyay at the Tata Institute of Fundamental Research.","tags":null,"title":"Suhail Sherif","type":"authors"},{"authors":[],"categories":null,"content":" Click on the Slides button above to view the built-in slides feature. Slides can be added in a few ways:\nCreate slides using Wowchemy’s Slides feature and link using slides parameter in the front matter of the talk file Upload an existing slide deck to static/ and link using url_slides parameter in the front matter of the talk file Embed your slides (e.g. Google Slides) or presentation video on this page using shortcodes. Further event details, including page elements such as image galleries, can be added to the body of this page.\n","date":1906549200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1906549200,"objectID":"a8edef490afe42206247b6ac05657af0","permalink":"https://suhailsherif.github.io/talk/example-talk/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/talk/example-talk/","section":"event","summary":"An example talk using Wowchemy's Markdown slides feature.","tags":[],"title":"Example Talk","type":"event"},{"authors":["Arkadev Chattopadhyay","Nikhil S. Mande","Suhail Sherif","Swagato Sanyal"],"categories":[],"content":"","date":1673395200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1673417486,"objectID":"8d6713772f1f3cd1cf46daa8aa098c97","permalink":"https://suhailsherif.github.io/publication/cmss-23/","publishdate":"2023-01-11T06:19:58.588894Z","relpermalink":"/publication/cmss-23/","section":"publication","summary":"We show that the deterministic decision tree complexity of a (partial) function or relation $f$ lifts to the deterministic parity decision tree (PDT) size complexity of the composed function/relation $f \\circ g$ as long as the gadget $g$ satisfies a property that we call stifling. We observe that several simple gadgets of constant size, like Indexing on 3 input bits, Inner Product on 4 input bits, Majority on 3 input bits and random functions, satisfy this property. It can be shown that existing randomized communication lifting theorems ([Göös, Pitassi, Watson. SICOMP'20], [Chattopadhyay et al. SICOMP'21]) imply PDT-size lifting. However there are two shortcomings of this approach: first they lift randomized decision tree complexity of $f$, which could be exponentially smaller than its deterministic counterpart when either $f$ is a partial function or even a total search problem. Second, the size of the gadgets in such lifting theorems are as large as logarithmic in the size of the input to $f$. Reducing the gadget size to a constant is an important open problem at the frontier of current research.\nOur result shows that even a random constant-size gadget does enable lifting to PDT size. Further, it also yields the first systematic way of turning lower bounds on the width of tree-like resolution proofs of the unsatisfiability of constant-width CNF formulas to lower bounds on the size of tree-like proofs in the resolution with parity system, i.e., $\\mathrm{Res}(\\oplus)$, of the unsatisfiability of closely related constant-width CNF formulas.","tags":["recent"],"title":"Lifting to Parity Decision Trees via Stifling","type":"publication"},{"authors":["Suhail Sherif"],"categories":null,"content":"Fine Design (turns out you can’t change the name of a channel once you create it) was a result of me trying out Grant Sanderson’s amazing manim library for mathematics-related animations. Thanks to that I ended up making a bunch of videos about topics that I considered layman-accessible but that I couldn’t find on YouTube. Here’s a list of topics covered.\nA couple of hat puzzles that I really liked for their basic yet insightful impossibility proofs, and for the impressive possibility results that follow. Watch the playlist A series on the BIGNUM BAKEOFF contest, where contestants had to submit $512$-character C codes and the code that returns the largest number (when run on a hypothetical computer with arbitrarily large ints) wins. It touches a lot of topics in theoretical computer science and mathematical logic. Watch the playlist A video on non-adaptive combinatorial group testing. It goes over how polynomials were used by some researchers to test people for covid with far fewer tests performed than the number of people tested. Watch the video A video on the Graham-Pollak Theorem and how the proof of such a combinatorial statement is so “non-combinatorial”. Watch the video A series on Markov’s Theorem (the one that bounds the maximum slope of a degree $d$ polynomial that is bounded in an interval). There’s a fascinating proof that I’ve tried to present. Watch the playlist A series on quantum brute-force password checking, with an upper bound from Grover’s algorithm and a matching lower bound from Markov’s theorem. Watch the playlist If you’re allowed to change a number $N$ in base $10$ by adding plus signs in the middle, (i.e. $15243 \\to 1+5+24+3 = 32$ is a valid step), then as $N \\to \\infty$, how many steps would you need to reach a single-digit number? $O(\\log^*N)$ is easy to prove, but can you show a better upper bound? Watch the video ","date":1653609600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1653609600,"objectID":"eb67a6edefe0280d01532013f0d81ebe","permalink":"https://suhailsherif.github.io/misc/fine_design/","publishdate":"2022-05-27T00:00:00Z","relpermalink":"/misc/fine_design/","section":"misc","summary":"A YouTube channel featuring some maths and theoretical computer science videos.","tags":null,"title":"Fine Design","type":"misc"},{"authors":["Nikhil S. Mande","Swagato Sanyal","Suhail Sherif"],"categories":[],"content":"","date":1653552807,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1653552807,"objectID":"b7dbe95af899783a637b77594c272337","permalink":"https://suhailsherif.github.io/publication/mss-22/","publishdate":"2022-05-26T08:13:27.649011Z","relpermalink":"/publication/mss-22/","section":"publication","summary":"We study the relationship between various one-way communication complexity measures of a composed function with the analogous decision tree complexity of the outer function. We consider two gadgets: the AND function on 2 inputs, and the Inner Product on a constant number of inputs. More generally, we show the following when the gadget is Inner Product on $2b$ input bits for all $b \\geq 2$, denoted $\\mathsf{IP}$.\n- If $f$ is a total Boolean function that depends on all of its $n$ input bits, then the bounded-error one-way quantum communication complexity of $f \\circ \\mathsf{IP}$ equals $\\Omega(n(b-1))$.\n- If $f$ is a *partial* Boolean function, then the deterministic one-way communication complexity of $f \\circ \\mathsf{IP}$ is at least the non-adaptive decision tree complexity of $f$.\n\nTo prove our quantum lower bound, we first show a lower bound on the VC-dimension of $f \\circ \\mathsf{IP}$. We then appeal to a result of Klauck [STOC '00], which immediately yields our quantum lower bound. Our deterministic lower bound relies on a combinatorial result independently proven by Ahlswede and Khachatrian [Adv. Appl. Math. '98], and Frankl and Tokushige [Comb. '99].\n\nIt is known due to a result of Montanaro and Osborne [arXiv '09] that the deterministic one-way communication complexity of $f \\circ \\mathsf{XOR}$ *equals* the non-adaptive parity decision tree complexity of $f$. In contrast, we show the following when the inner gadget is the AND function on 2 input bits.\n- There exists a function for which even the *quantum* non-adaptive AND decision tree complexity of $f$ is exponentially large in the deterministic one-way communication complexity of $f \\circ \\mathsf{AND}$.\n- However, for symmetric functions $f$, the non-adaptive AND decision tree complexity of $f$ is at most quadratic in the (even two-way) communication complexity of $f \\circ \\mathsf{AND}$.\n\nIn view of the first bullet, a lower bound on non-adaptive AND decision tree complexity of $f$ *does not* lift to a lower bound on one-way communication complexity of $f \\circ \\mathsf{AND}$.\n\nThe proof of the first bullet above uses the well-studied *Odd-Max-Bit* function.\n\nFor the second bullet, we first observe a connection between the one-way communication complexity of $f$ and the *Möbius sparsity* of $f$, and then give a lower bound on the Möbius sparsity of symmetric functions. An upper bound on the non-adaptive AND decision tree complexity of symmetric functions follows implicitly from prior work on combinatorial group testing; for the sake of completeness, we include a proof of this result.\n\nIt is well known that the rank of the communication matrix of a function $F$ is an upper bound on its deterministic one-way communication complexity. This bound is known to be tight for some $F$. However, in our final result we show that this is not the case when $F = f \\circ \\mathsf{AND}$. More precisely we show that for all $f$, the deterministic one-way communication complexity of $F = f \\circ \\mathsf{AND}$ is at most $(\\mathsf{rank}(M_{F}))(1 - \\Omega(1))$, where $M_{F}$ denotes the communication matrix of $F$.","tags":["recent"],"title":"One-Way Communication Complexity and Non-Adaptive Decision Trees","type":"publication"},{"authors":["Suhail Sherif"],"categories":null,"content":"The Problems ECCC has an annoying habit of downloading reports to your computer instead of opening them in the browser. The ECCC report upload page has a bug whenever you enter a space in a coauthor’s name that causes the entire page to crash. The Solution ECCC Fixes is a browser extension available for both Chrome-based browsers and for Firefox. You can find the extensions and more details about it (including the source code) over here.\n","date":1653523200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1653523200,"objectID":"0ad51295a17bdcc99a81b02463df29c4","permalink":"https://suhailsherif.github.io/misc/eccc_fixes/","publishdate":"2022-05-26T00:00:00Z","relpermalink":"/misc/eccc_fixes/","section":"misc","summary":"A browser extension that helps you use ECCC without downloading reports to your computer (and without your uploads getting restarted).","tags":null,"title":"ECCC Fixes","type":"misc"},{"authors":["Suhail Sherif"],"categories":[],"content":"","date":1621209600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1653623294,"objectID":"0f40cf545adf79432be77d9037b7794b","permalink":"https://suhailsherif.github.io/publication/thesis/","publishdate":"2022-05-27T03:48:14.593793Z","relpermalink":"/publication/thesis/","section":"publication","summary":"My PhD work was in the areas of query and communication complexity. These complexity models have a rich background connecting them to each other, to polynomials, to matrices, and they also serve as practical abstractions for various computing paradigms. In this thesis we provide more insight into these connections. The work in this thesis comes from three published papers: - The Log-Approximate-Rank Conjecture Is False, with Arkadev Chattopadhyay and Nikhil S. Mande: There are numerous neat connections between communication protocols and matrix ranks/norms. We show that certain conjectured connections between randomized communication protocols and approximate rank/matrix norms do not hold. - Towards Stronger Counterexamples to the Log-Approximate-Rank Conjecture, with Arkadev Chattopadhyay and Ankit Garg: We look at some simple functions arising from a combinatorial structure known as subspace designs. We show evidence that these simple functions are hard to compute. The simplicity of the functions and the conjectured hardness are even more glaringly at odds with each other than in the function presented in the previous work. We put forth a fundamental conjecture about subspaces that would prove the conjectured hardness if true. - No Quantum Speedup over Gradient Descent for Non-Smooth Convex Optimization, with Ankit Garg, Robin Kothari and Praneeth Netrapalli: Optimization algorithms are often black-box algorithms, looking at the outputs of the functions they are trying to optimize rather than looking at the inner workings of the function. This abstraction of a black-box algorithm is captured by query complexity. The well-known Gradient Descent is a black-box algorithm that is provably optimal for the task of non-smooth convex optimization. Using known techniques in quantum query complexity, we are able to show that Gradient Descent can not be improved upon by a quantum black-box algorithm. This is in contrast to other quantum black-box algorithms such as Grover's search and Shor's period finding algorithm which show significant speedups. Addenda: - Conjecture 7.1 is true! TsunMing Cheung, Hamed Hatami, Kaave Hosseini and Morgan Shirley proved in Separation of the factorization norm and randomized communication complexity that the $\\gamma_2$ norm of the Integer Inner Product function is large despite it being easy to compute using randomized communication. It also turns out to follow from previous results in discrepancy theory.\n- Conjecture 7.3 is false! The above-mentioned results in discrepancy theory also extend to an exponential separation between Randomized Parity Decision Trees and the logarithm of the $L_1$ norm, and hence between RPDTs and SubspaceDTs as well. This also provides insight to the approximate $L_1$ norm, showing that this can be far smaller than the exact $L_1$ norm even for a Boolean function. (To be published by the authors of the previous work.) (I also thank Swagato Sanyal for previously pointing out that there was a polynomial separation using the binary NAND tree. [Probabilistic boolean decision trees and the complexity of evaluating game trees, Saks and Wigderson '86 [Example 1.1]].) ","tags":[],"title":"Communication Complexity and Quantum Optimization Lower Bounds via Query Complexity","type":"publication"},{"authors":["Ankit Garg","Robin Kothari","Praneeth Netrapalli","Suhail Sherif"],"categories":[],"content":"","date":1609459200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1653546108,"objectID":"00e4c8fe11b69ee2ca633e1237ad8b3d","permalink":"https://suhailsherif.github.io/publication/gkns-21/","publishdate":"2022-05-26T06:21:48.391481Z","relpermalink":"/publication/gkns-21/","section":"publication","summary":"We study the complexity of optimizing highly smooth convex functions. For a positive integer $p$, we want to find an $\\\\epsilon$-approximate minimum of a convex function $f$, given oracle access to the function and its first $p$ derivatives, assuming that the $p$th derivative of $f$ is Lipschitz. Recently, three independent research groups (Jiang et al., PLMR 2019; Gasnikov et al., PLMR 2019; Bubeck et al., PLMR 2019) developed a new algorithm that solves this problem with $\\\\tilde{O}(1/\\\\epsilon^{2/3p+1})$ oracle calls for constant $p$. This is known to be optimal (up to log factors) for deterministic algorithms, but known lower bounds for randomized algorithms do not match this bound. We prove a new lower bound that matches this bound (up to log factors), and holds not only for randomized algorithms, but also for quantum algorithms.","tags":["recent"],"title":"Near-Optimal Lower Bounds For Convex Optimization For All Orders of Smoothness","type":"publication"},{"authors":["Ankit Garg","Robin Kothari","Praneeth Netrapalli","Suhail Sherif"],"categories":[],"content":"","date":1609459200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1653545486,"objectID":"d27b0787008eb10795c1e8e0c2001ff4","permalink":"https://suhailsherif.github.io/publication/gkns-20/","publishdate":"2022-05-26T06:19:58.784176Z","relpermalink":"/publication/gkns-20/","section":"publication","summary":"We study the first-order convex optimization problem, where we have black-box access to a (not necessarily smooth) function $f:\\\\mathbb{R}^n \\\\to \\\\mathbb{R}$ and its (sub)gradient. Our goal is to find an $\\\\epsilon$-approximate minimum of $f$ starting from a point that is distance at most $R$ from the true minimum. If $f$ is $G$-Lipschitz, then the classic gradient descent algorithm solves this problem with $O((GR/\\\\epsilon)^2)$ queries. Importantly, the number of queries is independent of the dimension n and gradient descent is optimal in this regard: No deterministic or randomized algorithm can achieve better complexity that is still independent of the dimension $n$.\nIn this paper we reprove the randomized lower bound of $\\\\Omega((GR/\\\\epsilon)^2)$ using a simpler argument than previous lower bounds. We then show that although the function family used in the lower bound is hard for randomized algorithms, it can be solved using $O(GR/\\\\epsilon)$ quantum queries. We then show an improved lower bound against quantum algorithms using a different set of instances and establish our main result that in general even quantum algorithms need $\\\\Omega((GR/\\\\epsilon)^2)$ queries to solve the problem. Hence there is no quantum speedup over gradient descent for black-box first-order convex optimization without further assumptions on the function family.","tags":["recent"],"title":"No Quantum Speedup over Gradient Descent for Non-Smooth Convex Optimization","type":"publication"},{"authors":["Arkadev Chattopadhyay","Ankit Garg","Suhail Sherif"],"categories":[],"content":"","date":1609459200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1653545486,"objectID":"5300d8d6fa6f7780bb397f91d9e43a2c","permalink":"https://suhailsherif.github.io/publication/cgs-20/","publishdate":"2022-05-26T06:19:58.588894Z","relpermalink":"/publication/cgs-20/","section":"publication","summary":"We give improved separations for the query complexity analogue of the log-approximate-rank conjecture i.e. we show that there are a plethora of total Boolean functions on n input bits, each of which has approximate Fourier sparsity at most $O(n^3)$ and randomized parity decision tree complexity $\\Theta(n)$. This improves upon the recent work of Chattopadhyay, Mande and Sherif (JACM '20) both qualitatively (in terms of designing a large number of examples) and quantitatively (improving the gap from quartic to cubic). We leave open the problem of proving a randomized communication complexity lower bound for XOR compositions of our examples. A linear lower bound would lead to new and improved refutations of the log-approximate-rank conjecture. Moreover, if any of these compositions had even a sub-linear cost randomized communication protocol, it would demonstrate that randomized parity decision tree complexity does not lift to randomized communication complexity in general (with the XOR gadget).","tags":["recent"],"title":"Towards Stronger Counterexamples to the Log-Approximate-Rank Conjecture","type":"publication"},{"authors":["Arkadev Chattopadhyay","Nikhil S. Mande","Suhail Sherif"],"categories":[],"content":"","date":1577836800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1653545486,"objectID":"577c5c340f752e103f2ca2ebcafb05c8","permalink":"https://suhailsherif.github.io/publication/cms-20/","publishdate":"2022-05-26T06:19:58.70907Z","relpermalink":"/publication/cms-20/","section":"publication","summary":"We construct a simple and total Boolean function $F = f \\circ \\mathsf{XOR}$ on $2n$ variables that has only $O(\\sqrt{n})$ spectral norm, $O(n^2)$ approximate rank and $O(n^{2.5})$ approximate nonnegative rank. (The approximate nonnegative rank has been improved to $O(n^2)$ in this paper by Mande and de Wolf.) We show it has polynomially large randomized bounded-error communication complexity of $\\Omega(\\sqrt{n})$. This yields the first exponential gap between the logarithm of the approximate rank and randomized communication complexity for total functions. Thus $F$ witnesses a refutation of the Log-Approximate-Rank Conjecture (LARC) which was posed by Lee and Shraibman [LS09] as a very natural analogue for randomized communication of the still unresolved Log-Rank Conjecture for deterministic communication. The best known previous gap for any total function between the two measures is a recent 4th-power separation by Göös, Jayram, Pitassi and Watson [GJPW17].\nAdditionally, our function $F$ refutes Grolmusz's Conjecture [Gro97] and a variant of the Log-Approximate-Nonnegative-Rank Conjecture, suggested recently by Kol, Moran, Shpilka and Yehudayoff [KMSY14], both of which are implied by the LARC. The complement of $F$ has exponentially large approximate nonnegative rank. This answers a question of Lee [Lee12] and Kol et al. [KMSY14], showing that approximate nonnegative rank can be exponentially larger than approximate rank. The inner function $f$ also falsifies a conjecture about parity measures of Boolean functions made by Tsang, Wong, Xie and Zhang [TWXZ13]. The latter conjecture implied the Log-Rank Conjecture for $\\mathsf{XOR}$ functions. We are pleased to note that shortly after we published our results two independent groups of researchers, Anshu, Boddu and Touchette [ABT19], and Sinha and de Wolf [SW19], used our function $F$ to prove that the Quantum-Log-Rank Conjecture is also false by showing that $F$ has $\\Omega(n^{1/6})$ quantum communication complexity. ","tags":[],"title":"The Log-Approximate-Rank Conjecture Is False","type":"publication"},{"authors":[],"categories":[],"content":"Create slides in Markdown with Wowchemy Wowchemy | Documentation\nFeatures Efficiently write slides in Markdown 3-in-1: Create, Present, and Publish your slides Supports speaker notes Mobile friendly slides Controls Next: Right Arrow or Space Previous: Left Arrow Start: Home Finish: End Overview: Esc Speaker notes: S Fullscreen: F Zoom: Alt + Click PDF Export Code Highlighting Inline code: variable\nCode block:\nporridge = \u0026#34;blueberry\u0026#34; if porridge == \u0026#34;blueberry\u0026#34;: print(\u0026#34;Eating...\u0026#34;) Math In-line math: $x + y = z$\nBlock math:\n$$ f\\left( x \\right) = ;\\frac{{2\\left( {x + 4} \\right)\\left( {x - 4} \\right)}}{{\\left( {x + 4} \\right)\\left( {x + 1} \\right)}} $$\nFragments Make content appear incrementally\n{{% fragment %}} One {{% /fragment %}} {{% fragment %}} **Two** {{% /fragment %}} {{% fragment %}} Three {{% /fragment %}} Press Space to play!\nOne Two Three A fragment can accept two optional parameters:\nclass: use a custom style (requires definition in custom CSS) weight: sets the order in which a fragment appears Speaker Notes Add speaker notes to your presentation\n{{% speaker_note %}} - Only the speaker can read these notes - Press `S` key to view {{% /speaker_note %}} Press the S key to view the speaker notes!\nOnly the speaker can read these notes Press S key to view Themes black: Black background, white text, blue links (default) white: White background, black text, blue links league: Gray background, white text, blue links beige: Beige background, dark text, brown links sky: Blue background, thin dark text, blue links night: Black background, thick white text, orange links serif: Cappuccino background, gray text, brown links simple: White background, black text, blue links solarized: Cream-colored background, dark green text, blue links Custom Slide Customize the slide style and background\n{{\u0026lt; slide background-image=\u0026#34;/media/boards.jpg\u0026#34; \u0026gt;}} {{\u0026lt; slide background-color=\u0026#34;#0000FF\u0026#34; \u0026gt;}} {{\u0026lt; slide class=\u0026#34;my-style\u0026#34; \u0026gt;}} Custom CSS Example Let’s make headers navy colored.\nCreate assets/css/reveal_custom.css with:\n.reveal section h1, .reveal section h2, .reveal section h3 { color: navy; } Questions? Ask\nDocumentation\n","date":1549324800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1549324800,"objectID":"0e6de1a61aa83269ff13324f3167c1a9","permalink":"https://suhailsherif.github.io/slides/example/","publishdate":"2019-02-05T00:00:00Z","relpermalink":"/slides/example/","section":"slides","summary":"An introduction to using Wowchemy's Slides feature.","tags":[],"title":"Slides","type":"slides"}]